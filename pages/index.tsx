import Head from 'next/head'
import { useState, useEffect } from 'react';
import { Accordion, Button, Modal } from 'react-bootstrap';
import '../styles/Home.module.css';
import axios from "axios";
import LoadingSpinner from './Spinner';
import Header from './common-layout/header/header'
import Link from 'next/link';


export default function Home() {

  const [isActive, setActive] = useState(false);
  const toggleClass = () => {
    setActive(!isActive);
  };

  const [show, setShow] = useState(false);
  const [modaldata, setShowdata] = useState<user[]>([]);
  const handleClose = () => setShow(false);
  
  const [isLoading, setIsLoading] = useState(false);
  const [users, setUsers] = useState([]);
  const [query, setQuery] = useState("");

  const handleOpenModal = (user: user) => {
    setShowdata(user);
  };

  // const [sort, setSort] = useState(users);


  type user = {
    name: string;
    username: string;
    email: any;
    website: any;
    id: number;
    length : number;
  }

  type menu = {
    name: string;
    link: any;
    sub: any;
  }

  // const handelNext = () => {
  //   console.log(modaldata, 'next');
  // }

  // const sortSort = (selectEvent : any) => {
  //   const options : any = {
  //     "a-z": [...users].sort((a, b) => (a < b ? -1 : 1)),
  //     "z-a": [...users].sort((a, b) => (a < b ? 1 : -1))
  //   };

  //   setSort(options[selectEvent.target.value]);

  // };

  const menus: menu[] = [
    {name: 'England', link: '1', sub: 
       [
          {name: 'Arsenal',link: '0-0', sub: null},
          {name: 'Liverpool',link: '0-1', sub: null},
          {name: 'Manchester United',link: '0-2', sub: null}
       ]
    },
    {name: 'Croatia', link: '0', sub: ''},
    {name: 'Spain', link: '2', sub: 
       [
          {name: 'Barcelona',link: '2-0', sub: null},
          {name: 'Real Madrid',link: '2-1', sub: null}
       ]
     },        
     {name: 'Germany', link: '3',sub: 
       [
          {name: 'Bayern Munich',link: '3-1', sub: null},
          {name: 'Borrusia Dortmund',link: '3-2', sub: null}
       ]
     }
 ]

  const fetchData : any = () => {
    setIsLoading(true);
    axios.get("https://jsonplaceholder.typicode.com/users").then((response) => {
      setTimeout(() => {
        setUsers(response.data);
        // setSort(response.data);
        setIsLoading(false);
      }, 500);
    });
  };

  useEffect(() => {
    fetchData();
  }, []);


  return (
    <>
      <Head>
        <title>Home </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
  
      <Header />
      <main>
      <section className="card-section">
        <div className="container">
          <div className="card-container1">
            <div className="row gx-3">
              <div className="col-lg-3 col-md-4 ">
              <div className="card-left">
                  <h3>Categories</h3>
                  <Accordion defaultActiveKey="0" alwaysOpen>

                    {
                      menus.map((menu: any, index : any) => {
                      return(<>
                      <Accordion.Item eventKey={index} key={index}>
                      <Accordion.Header>{menu.name}</Accordion.Header>
                      <Accordion.Body>
                        <ul>
                          
                       { menu.sub.length > 0 && (<>
                          {menu.sub.map((c: any, index: any) => (
                            <li key={index}>
                              <a href="#">{c.name}</a>
                            </li>
                          ))}
                       </>)}
                      
                        </ul>
                      </Accordion.Body>
                      </Accordion.Item>
                      </>)
                      }
                      )
                    }
                  </Accordion>
                </div>
              </div>

              <div className="col-lg-9 col-md-8">
              <div>
              <div className="row ">
                <div className="col-lg-8">
                <input placeholder="Enter Post Title" className="form-control" onChange={event => setQuery(event.target.value)} />
                </div>
                <div className="col-lg-4">

                {/* <select className='form-select' onChange={sortSort}>
                  <option  value="a-z">A - Z</option>
                  <option value="z-a">Z - A</option>
                </select> */}

                </div>
                
              </div>
           

           
            

                <div className="card-right">
                  {isLoading ? <LoadingSpinner /> : <>
                  {users.length}
                  {users.length > 0 &&  (
                    <div className="row ">
                      {users.filter((user : user) => {
                        if (query === "") {
                          return user;
                        } else if (user.username.toLowerCase().includes(query.toLowerCase())) {
                          return user;
                        } else if (user.length > 0) {
                          return (<>No</>);
                        }
                      }).map((user : user, index : number) => {
                        return (
                          <div className="col-lg-4 col-md-6 col-sm-6 mb-4" key={index}>
                            {/* <div className="card" onClick={() => { setShow(true); } }> */}
                              <div className="card" onClick={() => {handleOpenModal(user); setShow(true);}}>
                              <div className="card-img">
                                {/* <img
                                  src="https://mir-s3-cdn-cf.behance.net/projects/404/5779e0133762633.Y3JvcCwxMTkyLDkzMywxMTIsMA.jpg"
                                  className="card-img-top"
                                  alt="..."
                                /> */}
                              </div>

                              <div className="card-body">
                                <h5 className="card-title">{user.username}</h5>
                                <p className="card-text mb-2">{user.email}</p>
                                <p className="card-text">{user.website}</p>

                                <ul>
                                  <li>
                                    <a href="#!">Item</a>
                                  </li>
                                  <li>
                                    <a href="#!">Item</a>
                                  </li>
                                  <li>
                                    <a href="#!">Item</a>
                                  </li>

                                </ul>

                                <Link href={`/blog/${user.id}`}>
                                  {user.name}
                                </Link>

                              </div>
                            </div>
                          </div>
                        );
                      })}
                    </div>
                  )}
                  </>}  

                
                </div>
              </div>
            </div>
          </div>
          </div>
        </div>
      </section>
      </main>


      <Modal
        show={show}
        onHide={handleClose}
        backdrop="static"
        keyboard={false}
        // fullscreen={'xl-down'}
        dialogClassName="mx-1200"
      >
         <Modal.Header closeButton >
          <Modal.Title>Hello! <strong>{modaldata.username}</strong></Modal.Title>
       </Modal.Header>
       <Modal.Body>
        <p><strong>Name : </strong>{modaldata.name}</p>   
        <p><strong>Email : </strong>{modaldata.email}</p>  
        <p><strong>Email : </strong>{modaldata.website}</p> 
        </Modal.Body>
        <Modal.Footer>
          <Button variant="secondary" onClick={handleClose}>
            Close
          </Button>
          <Button variant="primary" >Next</Button>
        </Modal.Footer>
      </Modal> 


    </>
  )
}
